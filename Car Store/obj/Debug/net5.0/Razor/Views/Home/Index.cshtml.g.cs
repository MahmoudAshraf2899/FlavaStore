#pragma checksum "D:\Study\Car Store\Car Store\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ce4743b9fc185f576ea4a38b4d3dfd428fb32bd7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Study\Car Store\Car Store\Views\_ViewImports.cshtml"
using Car_Store;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Study\Car Store\Car Store\Views\_ViewImports.cshtml"
using Car_Store.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Study\Car Store\Car Store\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce4743b9fc185f576ea4a38b4d3dfd428fb32bd7", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2a0186f5a207935a313d72b58c6e0e4e580f3b2b", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Study\Car Store\Car Store\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""container-fluid"">
    <!-- Page Heading -->
    <h1 class=""h3 mb-4 text-gray-800"">Flava Store</h1>
    <div class=""row"">
        <div class=""col-lg-6"">
            <!-- Circle Buttons -->
            <div class=""card shadow mb-4"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">What is Flava Store ?</h6>
                </div>
                <div class=""card-body"">
                    <p>
                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy!
                    </p>
                    <!-- Circle Buttons (Default) -->
                    <div class=""mb-2"">
                        <code>Features</code>
                    </div>
                    <span>Lorem Ipsum is simply dummy text of the printing and typesetting</span>
                    <span>Lorem Ipsum is simply dummy text of the printing and typesetting</spa");
            WriteLiteral(@"n>
                    <span>Lorem Ipsum is simply dummy text of the printing and typesetting</span>
                    <!-- Circle Buttons (Small) -->
                    <div class=""mt-4 mb-2"">
                        <code>Team work</code>
                    </div>
                    <span>Lorem Ipsum is simply dummy text of the printing and typesetting</span>
                    <span>Lorem Ipsum is simply dummy text of the printing and typesetting</span>
                    <span>Lorem Ipsum is simply dummy text of the printing and typesetting</span>
                </div>
            </div>
            <!-- Brand Buttons -->
            <div class=""card shadow mb-4"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">Brand Informations </h6>
                </div>
                <div class=""card-body"">
                    <p>
                        Google and Facebook buttons are available featuring each company's respe");
            WriteLiteral(@"ctive
                        brand color. They are used on the user login and registration pages.
                    </p>
                    <p>
                        You can create more custom buttons by adding a new color variable in the
                        file and then using the Bootstrap button variant
                        mixin to create a new style, as demonstrated in the
                        file.
                    </p>

                    <a href=""https://www.facebook.com/profile.php?id=100008330089029"" target=""_blank"" class=""btn btn-facebook btn-block"">
                        <i class=""fab fa-facebook-f fa-fw""></i> facebook
                    </a>
                </div>
            </div>
        </div>
        <div class=""col-lg-6"">
            <div class=""card shadow mb-4"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">Products and Customers</h6>
                </div>
                <div c");
            WriteLiteral(@"lass=""card-body"">
                    <p>
                        Works with any button colors, just use the class and
                        the markup in the examples below. The examples below also use the
                         helper class on the icons for additional styling,
                        but it is not required.
                    </p>
                    <a href=""#"" class=""btn btn-primary btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-flag""></i>
                        </span>
                        <span class=""text"">Ferrari</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-success btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-check""></i>
                        </span>
                        <span class=""text"">Tesla</span>
                    </a>
 ");
            WriteLiteral(@"                   <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-info btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-info-circle""></i>
                        </span>
                        <span class=""text"">Bentley</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-warning btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-exclamation-triangle""></i>
                        </span>
                        <span class=""text"">Mercedes Benz</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-danger btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-trash""></i>
                        </span>
                        <");
            WriteLiteral(@"span class=""text"">BMW</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-secondary btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-arrow-right""></i>
                        </span>
                        <span class=""text"">Buggati</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-light btn-icon-split"">
                        <span class=""icon text-gray-600"">
                            <i class=""fas fa-arrow-right""></i>
                        </span>
                        <span class=""text"">Aston Martin</span>
                    </a>
                    <div class=""mb-4""></div>
                    <p>Also works with small and large button classes!</p>
                    <a href=""#"" class=""btn btn-primary btn-icon-split btn-sm"">
                        <span class=""icon");
            WriteLiteral(@" text-white-50"">
                            <i class=""fas fa-flag""></i>
                        </span>
                        <span class=""text"">Audi</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-primary btn-icon-split btn-lg"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-flag""></i>
                        </span>
                        <span class=""text"">LAMBORGHINI</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
